// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class BurnStream extends ethereum.Event {
  get params(): BurnStream__Params {
    return new BurnStream__Params(this);
  }
}

export class BurnStream__Params {
  _event: BurnStream;

  constructor(event: BurnStream) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CancelTransfer extends ethereum.Event {
  get params(): CancelTransfer__Params {
    return new CancelTransfer__Params(this);
  }
}

export class CancelTransfer__Params {
  _event: CancelTransfer;

  constructor(event: CancelTransfer) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ChangeOracle extends ethereum.Event {
  get params(): ChangeOracle__Params {
    return new ChangeOracle__Params(this);
  }
}

export class ChangeOracle__Params {
  _event: ChangeOracle;

  constructor(event: ChangeOracle) {
    this._event = event;
  }

  get newOracle(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ScheduleTransfer extends ethereum.Event {
  get params(): ScheduleTransfer__Params {
    return new ScheduleTransfer__Params(this);
  }
}

export class ScheduleTransfer__Params {
  _event: ScheduleTransfer;

  constructor(event: ScheduleTransfer) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get usdAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get starts(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ends(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get frequency(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class SetMaxPrice extends ethereum.Event {
  get params(): SetMaxPrice__Params {
    return new SetMaxPrice__Params(this);
  }
}

export class SetMaxPrice__Params {
  _event: SetMaxPrice;

  constructor(event: SetMaxPrice) {
    this._event = event;
  }

  get newMaxprice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class SetRedirect extends ethereum.Event {
  get params(): SetRedirect__Params {
    return new SetRedirect__Params(this);
  }
}

export class SetRedirect__Params {
  _event: SetRedirect;

  constructor(event: SetRedirect) {
    this._event = event;
  }

  get caller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get redirectTo(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get owed(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get usdAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get lastPaid(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class WithdrawPayer extends ethereum.Event {
  get params(): WithdrawPayer__Params {
    return new WithdrawPayer__Params(this);
  }
}

export class WithdrawPayer__Params {
  _event: WithdrawPayer;

  constructor(event: WithdrawPayer) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ScheduledTransfers__paymentsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getLastPaid(): BigInt {
    return this.value0;
  }

  getEnds(): BigInt {
    return this.value1;
  }

  getFrequency(): BigInt {
    return this.value2;
  }

  getUsdAmount(): BigInt {
    return this.value3;
  }
}

export class ScheduledTransfers extends ethereum.SmartContract {
  static bind(address: Address): ScheduledTransfers {
    return new ScheduledTransfers("ScheduledTransfers", address);
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  baseURI(): string {
    let result = super.call("baseURI", "baseURI():(string)", []);

    return result[0].toString();
  }

  try_baseURI(): ethereum.CallResult<string> {
    let result = super.tryCall("baseURI", "baseURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getApproved(param0: BigInt): Address {
    let result = super.call("getApproved", "getApproved(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_getApproved(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getApproved",
      "getApproved(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isApprovedForAll(param0: Address, param1: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  maxPrice(): BigInt {
    let result = super.call("maxPrice", "maxPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxPrice", "maxPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nextTokenId(): BigInt {
    let result = super.call("nextTokenId", "nextTokenId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextTokenId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nextTokenId", "nextTokenId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(id: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  payments(param0: BigInt): ScheduledTransfers__paymentsResult {
    let result = super.call(
      "payments",
      "payments(uint256):(uint32,uint32,uint32,uint160)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new ScheduledTransfers__paymentsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_payments(
    param0: BigInt
  ): ethereum.CallResult<ScheduledTransfers__paymentsResult> {
    let result = super.tryCall(
      "payments",
      "payments(uint256):(uint32,uint32,uint32,uint160)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ScheduledTransfers__paymentsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  redirects(param0: Address, param1: BigInt): Address {
    let result = super.call(
      "redirects",
      "redirects(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_redirects(param0: Address, param1: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "redirects",
      "redirects(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  tokenURI(_id: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);

    return result[0].toString();
  }

  try_tokenURI(_id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(_id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BatchCall extends ethereum.Call {
  get inputs(): BatchCall__Inputs {
    return new BatchCall__Inputs(this);
  }

  get outputs(): BatchCall__Outputs {
    return new BatchCall__Outputs(this);
  }
}

export class BatchCall__Inputs {
  _call: BatchCall;

  constructor(call: BatchCall) {
    this._call = call;
  }

  get calls(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }

  get revertOnFail(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class BatchCall__Outputs {
  _call: BatchCall;

  constructor(call: BatchCall) {
    this._call = call;
  }
}

export class BurnStreamCall extends ethereum.Call {
  get inputs(): BurnStreamCall__Inputs {
    return new BurnStreamCall__Inputs(this);
  }

  get outputs(): BurnStreamCall__Outputs {
    return new BurnStreamCall__Outputs(this);
  }
}

export class BurnStreamCall__Inputs {
  _call: BurnStreamCall;

  constructor(call: BurnStreamCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnStreamCall__Outputs {
  _call: BurnStreamCall;

  constructor(call: BurnStreamCall) {
    this._call = call;
  }
}

export class CancelTransferCall extends ethereum.Call {
  get inputs(): CancelTransferCall__Inputs {
    return new CancelTransferCall__Inputs(this);
  }

  get outputs(): CancelTransferCall__Outputs {
    return new CancelTransferCall__Outputs(this);
  }
}

export class CancelTransferCall__Inputs {
  _call: CancelTransferCall;

  constructor(call: CancelTransferCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelTransferCall__Outputs {
  _call: CancelTransferCall;

  constructor(call: CancelTransferCall) {
    this._call = call;
  }
}

export class ChangeOracleCall extends ethereum.Call {
  get inputs(): ChangeOracleCall__Inputs {
    return new ChangeOracleCall__Inputs(this);
  }

  get outputs(): ChangeOracleCall__Outputs {
    return new ChangeOracleCall__Outputs(this);
  }
}

export class ChangeOracleCall__Inputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }

  get newOracle(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeOracleCall__Outputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }
}

export class PermitTokenCall extends ethereum.Call {
  get inputs(): PermitTokenCall__Inputs {
    return new PermitTokenCall__Inputs(this);
  }

  get outputs(): PermitTokenCall__Outputs {
    return new PermitTokenCall__Outputs(this);
  }
}

export class PermitTokenCall__Inputs {
  _call: PermitTokenCall;

  constructor(call: PermitTokenCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get from(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[7].value.toBytes();
  }
}

export class PermitTokenCall__Outputs {
  _call: PermitTokenCall;

  constructor(call: PermitTokenCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class ScheduleTransferCall extends ethereum.Call {
  get inputs(): ScheduleTransferCall__Inputs {
    return new ScheduleTransferCall__Inputs(this);
  }

  get outputs(): ScheduleTransferCall__Outputs {
    return new ScheduleTransferCall__Outputs(this);
  }
}

export class ScheduleTransferCall__Inputs {
  _call: ScheduleTransferCall;

  constructor(call: ScheduleTransferCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _usdAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _starts(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _ends(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _frequency(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ScheduleTransferCall__Outputs {
  _call: ScheduleTransferCall;

  constructor(call: ScheduleTransferCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetMaxPriceCall extends ethereum.Call {
  get inputs(): SetMaxPriceCall__Inputs {
    return new SetMaxPriceCall__Inputs(this);
  }

  get outputs(): SetMaxPriceCall__Outputs {
    return new SetMaxPriceCall__Outputs(this);
  }
}

export class SetMaxPriceCall__Inputs {
  _call: SetMaxPriceCall;

  constructor(call: SetMaxPriceCall) {
    this._call = call;
  }

  get newMaxPrice(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxPriceCall__Outputs {
  _call: SetMaxPriceCall;

  constructor(call: SetMaxPriceCall) {
    this._call = call;
  }
}

export class SetRedirectCall extends ethereum.Call {
  get inputs(): SetRedirectCall__Inputs {
    return new SetRedirectCall__Inputs(this);
  }

  get outputs(): SetRedirectCall__Outputs {
    return new SetRedirectCall__Outputs(this);
  }
}

export class SetRedirectCall__Inputs {
  _call: SetRedirectCall;

  constructor(call: SetRedirectCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _redirectTo(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetRedirectCall__Outputs {
  _call: SetRedirectCall;

  constructor(call: SetRedirectCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _price(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _timestamp(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class WithdrawPayerCall extends ethereum.Call {
  get inputs(): WithdrawPayerCall__Inputs {
    return new WithdrawPayerCall__Inputs(this);
  }

  get outputs(): WithdrawPayerCall__Outputs {
    return new WithdrawPayerCall__Outputs(this);
  }
}

export class WithdrawPayerCall__Inputs {
  _call: WithdrawPayerCall;

  constructor(call: WithdrawPayerCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawPayerCall__Outputs {
  _call: WithdrawPayerCall;

  constructor(call: WithdrawPayerCall) {
    this._call = call;
  }
}
