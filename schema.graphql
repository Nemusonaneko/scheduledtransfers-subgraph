type Pool @entity {
  id: ID!
  poolContract: Bytes
  owner: Bytes
  oracle: Bytes
  maxPrice: BigInt
  token: Token!
  payments: [Payment!]! @derivedFrom(field: "pool")
  history: [HistoryEvent!]! @derivedFrom(field: "pool")
  createdTimestamp: BigInt
  createdBlock: BigInt
}

type Token @entity {
  id: ID!
  address: Bytes
  symbol: String
  name: String
  decimals: Int
}

type Payment @entity {
  id: ID!
  streamId: BigInt
  token: Token
  redirects: Bytes
  usdAmount: BigInt
  starts: BigInt
  ends: BigInt
  frequency: BigInt
  lastPaid: BigInt
  pool: Pool!
  history: [HistoryEvent!]! @derivedFrom(field: "payment")
  createdTimestamp: BigInt
  createdBlock: BigInt
}

type HistoryEvent @entity {
  id: ID!
  txHash: Bytes
  eventType: String
  token: Token
  amount: BigInt
  usdAmount: BigInt
  price: BigInt
  to: Bytes
  pool: Pool!
  payment: Payment
  createdTimestamp: BigInt
  createdBlock: BigInt
}
